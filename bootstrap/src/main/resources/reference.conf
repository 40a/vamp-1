akka {

  loglevel = "DEBUG"
  log-dead-letters = on
  log-config-on-start = off
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  event-handlers = ["akka.event.slf4j.Slf4jEventHandler"]

  actor {
    debug {
      fsm = on
      receive = on
      lifecycle = on
      autoreceive = on
      event-stream = on
    }

    default-mailbox {
      mailbox-type = "akka.dispatch.SingleConsumerOnlyUnboundedMailbox"
    }
  }

  default-dispatcher.fork-join-executor.pool-size-max = 32
  jvm-exit-on-fatal-error = false
}

server {

  interface = 0.0.0.0
  host = localhost
  port = 8080

  response {
    timeout = 180 # seconds, HTTP response timeout
  }
}

persistence {
  response.timeout = 180 # seconds, timeout for DB operations
}

deployment {

  synchronization.period = 0 # seconds, watchdog will be active only if period is greater than 0

  container {
    driver {
      type = "marathon"
      url = "http://10.210.110.57:8080"
    }
    response.timeout = 180 # seconds, timeout for container operations
  }

  router {
    driver.url = "http://10.210.110.57:10001"

    host = "10.210.110.57" # note: host of cluster hosts will have this value (e.g. db.host)
    response.timeout = 180 # seconds, timeout for container operations
  }

  dictionary {
    response.timeout = 180 # seconds, timeout for container operations

    port.range = 33000-35000
  }
}