global
 pidfile /opt/vamp/haproxy.pid
 daemon
 maxconn 4096
 log /opt/vamp/haproxy.log.sock local0


 defaults
   log global
   mode http
   option dontlognull
   option redispatch
   option clitcpka
   option srvtcpka
   option http-keep-alive

   retries 3
   maxconn 500000

   # slowloris protection: clients should send their full http request in the configured time
   timeout http-request 5s

   timeout connect 5000ms
   timeout client 50000ms
   timeout server 50000ms

listen stats :1988
   mode http
   stats enable
   stats uri /
   stats refresh 2s
   stats realm Haproxy\ Stats
   stats auth haproxy:haproxy

### BEGIN GENERATED SECTION ###

frontend cd10460f-ca44-49c6-9965-f66c27acd478_sava_8080
    
    bind 0.0.0.0:33001
    

     option httplog 
    


    ###
    #
    # Set logging and set the headers to capture

    # capture request header X-Vamp-Server-CurrentTime len 50
    # capture response header X-Vamp-Server-ResponseTime len 50
    # capture response header X-Vamp-Server-Name len 50


    log-format %ci:%cp\ [%t]\ %ft\ %b/%s\ %Tq/%Tw/%Tc/%Tr/%Tt\ %ST\ %B\ %CC\ %CS\ %tsc\ %ac/%fc/%bc/%sc/%rc\ %sq/%bq\ %hr\ %hs\ %{+Q}r

    #
    ###

    

    mode http
    

    ###
    #
    # Spike/Rate Limiting & Quota Management
    #
    # We use a stick table to keep track of TCP connections rates and bytes send out.
    # On these metrics we set rules to designate upper limits. When limits are hit
    # we reroute the traffic to a specific abusers backend

     # end HTTP spike limit generation

     # end spike limit generation

    ###
    # Filter Management
    #
    # set filters with optional negation
    #


    default_backend cd10460f-ca44-49c6-9965-f66c27acd478_sava_8080


frontend cd10460f-ca44-49c6-9965-f66c27acd478_sava_8080::sava:1.0.0
    

     option httplog 
    


    ###
    #
    # Set logging and set the headers to capture

    # capture request header X-Vamp-Server-CurrentTime len 50
    # capture response header X-Vamp-Server-ResponseTime len 50
    # capture response header X-Vamp-Server-Name len 50


    log-format %ci:%cp\ [%t]\ %ft\ %b/%s\ %Tq/%Tw/%Tc/%Tr/%Tt\ %ST\ %B\ %CC\ %CS\ %tsc\ %ac/%fc/%bc/%sc/%rc\ %sq/%bq\ %hr\ %hs\ %{+Q}r

    #
    ###

    
    bind unix@/opt/vamp/3ce169f7009d18e5035a29da2156befc7d59977.sock accept-proxy
    

    mode http
    

    ###
    #
    # Spike/Rate Limiting & Quota Management
    #
    # We use a stick table to keep track of TCP connections rates and bytes send out.
    # On these metrics we set rules to designate upper limits. When limits are hit
    # we reroute the traffic to a specific abusers backend

     # end HTTP spike limit generation

     # end spike limit generation

    ###
    # Filter Management
    #
    # set filters with optional negation
    #

    

    default_backend cd10460f-ca44-49c6-9965-f66c27acd478_sava_8080::sava:1.0.0


frontend cd10460f-ca44-49c6-9965-f66c27acd478_sava_8080::sava:1.1.0
    

     option httplog 
    


    ###
    #
    # Set logging and set the headers to capture

    # capture request header X-Vamp-Server-CurrentTime len 50
    # capture response header X-Vamp-Server-ResponseTime len 50
    # capture response header X-Vamp-Server-Name len 50


    log-format %ci:%cp\ [%t]\ %ft\ %b/%s\ %Tq/%Tw/%Tc/%Tr/%Tt\ %ST\ %B\ %CC\ %CS\ %tsc\ %ac/%fc/%bc/%sc/%rc\ %sq/%bq\ %hr\ %hs\ %{+Q}r

    #
    ###

    
    bind unix@/opt/vamp/3ce169f7009d18e5035a29da2156befc7d59977.sock accept-proxy
    

    mode http
    

    ###
    #
    # Spike/Rate Limiting & Quota Management
    #
    # We use a stick table to keep track of TCP connections rates and bytes send out.
    # On these metrics we set rules to designate upper limits. When limits are hit
    # we reroute the traffic to a specific abusers backend

     # end HTTP spike limit generation

     # end spike limit generation

    ###
    # Filter Management
    #
    # set filters with optional negation
    #

    

    default_backend cd10460f-ca44-49c6-9965-f66c27acd478_sava_8080::sava:1.1.0


frontend cd10460f-ca44-49c6-9965-f66c27acd478_9050
    
    bind 0.0.0.0:9050
    

     option httplog 
    


    ###
    #
    # Set logging and set the headers to capture

    # capture request header X-Vamp-Server-CurrentTime len 50
    # capture response header X-Vamp-Server-ResponseTime len 50
    # capture response header X-Vamp-Server-Name len 50


    log-format %ci:%cp\ [%t]\ %ft\ %b/%s\ %Tq/%Tw/%Tc/%Tr/%Tt\ %ST\ %B\ %CC\ %CS\ %tsc\ %ac/%fc/%bc/%sc/%rc\ %sq/%bq\ %hr\ %hs\ %{+Q}r

    #
    ###

    

    mode http
    

    ###
    #
    # Spike/Rate Limiting & Quota Management
    #
    # We use a stick table to keep track of TCP connections rates and bytes send out.
    # On these metrics we set rules to designate upper limits. When limits are hit
    # we reroute the traffic to a specific abusers backend

     # end HTTP spike limit generation

     # end spike limit generation

    ###
    # Filter Management
    #
    # set filters with optional negation
    #

    

    default_backend cd10460f-ca44-49c6-9965-f66c27acd478_9050


frontend cd10460f-ca44-49c6-9965-f66c27acd478_9050::sava.port
    

     option httplog 
    


    ###
    #
    # Set logging and set the headers to capture

    # capture request header X-Vamp-Server-CurrentTime len 50
    # capture response header X-Vamp-Server-ResponseTime len 50
    # capture response header X-Vamp-Server-Name len 50


    log-format %ci:%cp\ [%t]\ %ft\ %b/%s\ %Tq/%Tw/%Tc/%Tr/%Tt\ %ST\ %B\ %CC\ %CS\ %tsc\ %ac/%fc/%bc/%sc/%rc\ %sq/%bq\ %hr\ %hs\ %{+Q}r

    #
    ###

    
    bind unix@/opt/vamp/a20734a4b1e6c36d073e5bab33ed17b9b3a1811d.sock accept-proxy
    

    mode http
    

    ###
    #
    # Spike/Rate Limiting & Quota Management
    #
    # We use a stick table to keep track of TCP connections rates and bytes send out.
    # On these metrics we set rules to designate upper limits. When limits are hit
    # we reroute the traffic to a specific abusers backend

     # end HTTP spike limit generation

     # end spike limit generation

    ###
    # Filter Management
    #
    # set filters with optional negation
    #

    

    default_backend cd10460f-ca44-49c6-9965-f66c27acd478_9050::sava.port






backend cd10460f-ca44-49c6-9965-f66c27acd478_sava_8080
    mode http
#
# Regular HTTP/TCP backends
#

    balance roundrobin 
   



    
        server cd10460f-ca44-49c6-9965-f66c27acd478_sava_8080::sava:1.0.0 unix@/opt/vamp/3ce169f7009d18e5035a29da2156befc7d59977.sock send-proxy weight 90
    
        server cd10460f-ca44-49c6-9965-f66c27acd478_sava_8080::sava:1.1.0 unix@/opt/vamp/3ce169f7009d18e5035a29da2156befc7d59977.sock send-proxy weight 10
    





backend cd10460f-ca44-49c6-9965-f66c27acd478_sava_8080::sava:1.0.0
    mode http
#
# Regular HTTP/TCP backends
#

    balance roundrobin 
   



    option forwardfor
   

   http-response set-header X-Vamp-Server-Name %s
   http-response set-header X-Vamp-Server-ResponseTime %t

   

    cookie vamp_srv insert indirect nocache httponly maxidle 5m maxlife 1h 
    
        server 64435a223bddf1fa589135baa5e228090279c032 192.168.99.100:32772  cookie 64435a223bddf1fa589135baa5e228090279c032  weight 100 maxconn 1000  
        server 52c84bbf28dcc96bd4c4167eeeb7ff0a69bfb6eb 192.168.99.100:32772  cookie 52c84bbf28dcc96bd4c4167eeeb7ff0a69bfb6eb  weight 100 maxconn 1000  
        server 5ccec1ae37f9c8f9e8eb1267bc176155541ceeb7 192.168.99.100:32772  cookie 5ccec1ae37f9c8f9e8eb1267bc176155541ceeb7  weight 100 maxconn 1000  
    
    
    
    
    
    
    
    
    
    
    





backend cd10460f-ca44-49c6-9965-f66c27acd478_sava_8080::sava:1.1.0
    mode http
#
# Regular HTTP/TCP backends
#

    balance roundrobin 
   



    option forwardfor
   

   http-response set-header X-Vamp-Server-Name %s
   http-response set-header X-Vamp-Server-ResponseTime %t

   

    cookie vamp_srv insert indirect nocache httponly maxidle 5m maxlife 1h 
    
        server 9019c00f1f7f641c4efc7a02c6f44e9f90d7750 192.168.99.100:32773  cookie 9019c00f1f7f641c4efc7a02c6f44e9f90d7750  weight 100 maxconn 1000  
        server 49594c26c89754450bd4f562946a69070a4aa887 192.168.99.100:32773  cookie 49594c26c89754450bd4f562946a69070a4aa887  weight 100 maxconn 1000  
    
    
    
    
    
    
    
    
    
    
    





backend cd10460f-ca44-49c6-9965-f66c27acd478_9050
    mode http
#
# Regular HTTP/TCP backends
#

    balance roundrobin 
   



    
        server cd10460f-ca44-49c6-9965-f66c27acd478_9050::sava.port unix@/opt/vamp/a20734a4b1e6c36d073e5bab33ed17b9b3a1811d.sock send-proxy weight 100
    





backend cd10460f-ca44-49c6-9965-f66c27acd478_9050::sava.port
    mode http
#
# Regular HTTP/TCP backends
#

    balance roundrobin 
   



    option forwardfor
   

   http-response set-header X-Vamp-Server-Name %s
   http-response set-header X-Vamp-Server-ResponseTime %t

   

    cookie vamp_srv insert indirect nocache httponly maxidle 5m maxlife 1h 
    
        server cd10460f-ca44-49c6-9965-f66c27acd478_9050 192.168.99.100:33002  cookie cd10460f-ca44-49c6-9965-f66c27acd478_9050  weight 100 maxconn 1000
    
    
    
    
    
    
    
    
    
    
    





#backend abusers
#    mode http
#    errorfile 409 /opt/docker/configuration/error_pages/500rate.http

### END GENERATED SECTION ###